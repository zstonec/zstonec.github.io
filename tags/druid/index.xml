<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>druid on 小石笔记</title><link>https://zstonec.github.io/tags/druid/</link><description>Recent content in druid on 小石笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 02 Sep 2022 17:55:27 +0800</lastBuildDate><atom:link href="https://zstonec.github.io/tags/druid/index.xml" rel="self" type="application/rss+xml"/><item><title>Druid Kafka Index Service支持多topic改造</title><link>https://zstonec.github.io/post/multi-kafka-index/</link><pubDate>Fri, 02 Sep 2022 17:55:27 +0800</pubDate><guid>https://zstonec.github.io/post/multi-kafka-index/</guid><description>&lt;p>Druid实时摄取支持Kafka Index Service和Tranquility两种方式。对比Tranquility的方式，KIS具有Exactly Once语义，部署维护简单，schema实时生效等优点。然而，当前社区KIS仅支持从一个topic摄取数据，写入一个dataSource。而我们的场景是请求、曝光、点击分别有一个topic，每个topic的日志格式一致（每个topic都各自有下游的统计等其他任务）。然后通过Tranquility摄取到同一个dataSource中。如果改为KIS摄取，按照社区的建议，需要在上游将请求、曝光、点击写入一个新的topic中。这带来两个问题：1.我们的数据量非常大，如果再建一个新的topic，几乎等于kafka的流量翻倍，成本和运维压力巨大；2.请求、曝光的数据量较大（重要性相对较低），而点击等日志量较小（重要性相对较高）。如果都放在一个topic中，不同日志之间可能会相互影响。因此，我们需要改造KIS，支持从多个topic摄取，写入到一个dataSource中。&lt;/p></description></item><item><title>Tranquility线程溢出问题排查</title><link>https://zstonec.github.io/post/tranquility-thread/</link><pubDate>Thu, 01 Jul 2021 19:45:27 +0800</pubDate><guid>https://zstonec.github.io/post/tranquility-thread/</guid><description>&lt;p>本文记录一次生产环境Tranquility线程溢出的问题。&lt;/p></description></item><item><title>Druid Segment</title><link>https://zstonec.github.io/post/druid-segment/</link><pubDate>Tue, 25 May 2021 15:58:34 +0800</pubDate><guid>https://zstonec.github.io/post/druid-segment/</guid><description>&lt;p>本文从druid存储文件入手，由下而上，分析segment的存储结构，力求详尽。&lt;/p></description></item></channel></rss>